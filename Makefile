# Makefile –¥–ª—è RAG Service
.PHONY: help build up down dev logs clean migrate test lint format

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
COMPOSE_FILE = docker-compose.yml
DEV_COMPOSE_FILE = docker-compose.dev.yml
SERVICE_NAME = rag_service

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "RAG Service Docker Management"
	@echo "============================="
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

export-deps: ## –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ Poetry –≤ requirements.txt
	@echo "üîß –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
	./export-deps.sh

build: export-deps ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã (—Å —ç–∫—Å–ø–æ—Ä—Ç–æ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)
	docker-compose -f $(COMPOSE_FILE) build

build-dev: export-deps ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Å —ç–∫—Å–ø–æ—Ä—Ç–æ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)
	docker-compose -f $(DEV_COMPOSE_FILE) build

up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	docker-compose -f $(COMPOSE_FILE) up -d
	@echo "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã:"
	@echo "- RAG Service: http://localhost:8001"

up-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	docker-compose -f $(DEV_COMPOSE_FILE) up -d
	@echo "–°–µ—Ä–≤–∏—Å—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—â–µ–Ω—ã:"
	@echo "- RAG Service: http://localhost:8001 (—Å hot reload)"
	@echo "- AI Manager: http://localhost:8002"
	@echo "- PostgreSQL: localhost:5433"

down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	docker-compose -f $(COMPOSE_FILE) down

down-dev: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	docker-compose -f $(DEV_COMPOSE_FILE) down

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	docker-compose -f $(COMPOSE_FILE) stop

stop-dev: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	docker-compose -f $(DEV_COMPOSE_FILE) stop

restart: down up ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã

restart-dev: down-dev up-dev ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	docker-compose -f $(COMPOSE_FILE) logs -f

logs-dev: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	docker-compose -f $(DEV_COMPOSE_FILE) logs -f

logs-rag: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ RAG —Å–µ—Ä–≤–∏—Å–∞
	docker-compose -f $(COMPOSE_FILE) logs -f $(SERVICE_NAME)

logs-rag-dev: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ RAG —Å–µ—Ä–≤–∏—Å–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
	docker-compose -f $(DEV_COMPOSE_FILE) logs -f $(SERVICE_NAME)

shell: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä RAG —Å–µ—Ä–≤–∏—Å–∞
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_NAME) /bin/bash

shell-dev: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä RAG —Å–µ—Ä–≤–∏—Å–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
	docker-compose -f $(DEV_COMPOSE_FILE) exec $(SERVICE_NAME) /bin/bash

migrate: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_NAME) python migrate.py

migrate-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
	docker-compose -f $(DEV_COMPOSE_FILE) exec $(SERVICE_NAME) python migrate.py

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	docker-compose -f $(DEV_COMPOSE_FILE) exec $(SERVICE_NAME) pytest

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º
	docker-compose -f $(DEV_COMPOSE_FILE) exec $(SERVICE_NAME) flake8 app/

format: ## –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	docker-compose -f $(DEV_COMPOSE_FILE) exec $(SERVICE_NAME) black app/
	docker-compose -f $(DEV_COMPOSE_FILE) exec $(SERVICE_NAME) isort app/

clean: ## –û—á–∏—Å—Ç–∏—Ç—å Docker –¥–∞–Ω–Ω—ã–µ
	docker-compose -f $(COMPOSE_FILE) down -v
	docker-compose -f $(DEV_COMPOSE_FILE) down -v
	docker system prune -f

clean-images: ## –£–¥–∞–ª–∏—Ç—å –≤—Å–µ Docker –æ–±—Ä–∞–∑—ã –ø—Ä–æ–µ–∫—Ç–∞
	docker-compose -f $(COMPOSE_FILE) down --rmi all
	docker-compose -f $(DEV_COMPOSE_FILE) down --rmi all

health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
	@curl -f http://localhost:8000/health || echo "‚ùå RAG Service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@curl -f http://localhost:8002/health || echo "‚ùå AI Manager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@docker-compose -f $(COMPOSE_FILE) ps

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±–µ–∑ Docker
install-local: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ª–æ–∫–∞–ª—å–Ω–æ (—Å poetry)
	poetry install
	./install_hf_deps.sh

install-pip: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ pip (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞)
	./export-deps.sh
	pip install -r requirements.txt
	pip install -r requirements-hf.txt
	pip install -r requirements-dev.txt

run-local: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å –ª–æ–∫–∞–ª—å–Ω–æ
	python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

# –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
deploy: export-deps build up migrate ## –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –≤ –ø—Ä–æ–¥–∞–∫—à–Ω (—Å —ç–∫—Å–ø–æ—Ä—Ç–æ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)

backup-db: ## –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	docker-compose -f $(COMPOSE_FILE) exec postgres pg_dump -U docker postgres > backup_$(shell date +%Y%m%d_%H%M%S).sql

restore-db: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (—É–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª: make restore-db FILE=backup.sql)
	docker-compose -f $(COMPOSE_FILE) exec -T postgres psql -U docker postgres < $(FILE)
